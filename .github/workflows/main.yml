name: legendmeta

on:
  push:
    branches:
      - main
      - "releases/**"
  pull_request:
  release:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Test legendmeta with Python
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macos-13]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get dependencies and install legendmeta
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install --upgrade .[test]
      - name: Set LEGEND_METADATA_TESTDIR variable
        run: |
          echo "LEGEND_METADATA_TESTDIR=$GITHUB_WORKSPACE/legend-metadata" >> $GITHUB_ENV
      - name: Clone legend-metadata
        if: github.event.pull_request.head.repo.fork == false
        uses: actions/checkout@v4
        with:
          repository: legend-exp/legend-metadata
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.CLONE_LEGEND_METADATA }}
          path: ${{ env.LEGEND_METADATA_TESTDIR }}
      - name: Run unit tests
        if: github.event.pull_request.head.repo.fork == true
        run: |
          python -m pytest -m "not needs_slowcontrol"
      - name: Run unit tests that need legend-metadata
        if: github.event.pull_request.head.repo.fork == false
        run: |
          python -m pytest --runxfail -m "not needs_slowcontrol"

  test-coverage:
    name: Calculate and upload test coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Get dependencies and install legendmeta
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install --upgrade .[test]
      - name: Set LEGEND_METADATA_TESTDIR variable
        run: |
          echo "LEGEND_METADATA_TESTDIR=$GITHUB_WORKSPACE/legend-metadata" >> $GITHUB_ENV
      - name: Clone legend-metadata
        if: github.event.pull_request.head.repo.fork == false
        uses: actions/checkout@v4
        with:
          repository: legend-exp/legend-metadata
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.CLONE_LEGEND_METADATA }}
          path: ${{ env.LEGEND_METADATA_TESTDIR }}
      - name: Generate report for unit tests
        if: github.event.pull_request.head.repo.fork == true
        run: |
          python -m pytest --cov=legendmeta --cov-report=xml -m "not needs_slowcontrol"
      - name: Generate report for (all) unit tests
        if: github.event.pull_request.head.repo.fork == false
        run: |
          python -m pytest --cov=legendmeta --cov-report=xml --runxfail -m "not needs_slowcontrol"
      - name: Upload Coverage to codecov.io
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build-docs:
    name: Build documentation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Setup build environment
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install --upgrade .[docs]
      - name: Build docs for current ref
        run: |
          cd docs
          make clean
          make
